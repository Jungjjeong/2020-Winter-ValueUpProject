
<!doctype html>
<html>
<head>
    <style>
        canvas{
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }
    </style>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>부정행위 점수 확인</title>
	<script src="/Chart.min.js"></script>
	<script src="/graph-utils.js"></script>
</head>

<body>
	<div style="width:100%;">
		<canvas id="canvas"></canvas>
	</div>
	<br>
	<br>
    <a href="javascript:history.back()">뒤로가기</a>
	<script>
		var lectureName="<%=lectureName%>";
		console.log(lectureName);
		var title = "강의 " + lectureName + " , 부정행위 점수 다시보기"
		var data = "<%=JSON.stringify(data)%>";
		data = data.replace(/&#34;/gi, '\"');
		data = JSON.parse(data);
		console.log(data);

		var labels = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20'];
		var colorList = ['red','orange','yellow','green','blue','purple','grey'];

		var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

		var randomScalingFactor = function() {
			return Math.round(Math.random() * 100);
		};

		var configData = {}
		var datasetList = [];
		var index = 0;
		var colorNames = Object.keys(window.chartColors);

		for(var key in data){
			let scoreData = [];
			let tic = parseInt(data[key].length / 20);
			console.log(tic);
			
			for(let i=0;i<20;i++){
				scoreData.push(data[key].scoreList[i*tic]);
			}

			var colorName = colorNames[datasetList.length % colorNames.length];
			var newColor = window.chartColors[colorName];

			datasetList.push({
					label : key,
					backgroundColor : newColor,
					borderColor: newColor,
					data: scoreData,
					fill : false,
					})
		}

		var config = {
			type: 'line',
			data: {
				labels: labels,
				datasets: datasetList,
			},
			options: {
				responsive: true,
				title: {
					display: true,
					text: title
				},
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
				scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'TIME'
						}
					}],
					yAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'SCORE'
						},
						ticks: {
							min: 0,
							max: 100,

							// forces step size to be 5 units
							stepSize: 5
						}
					}]
				}
			}
		};

		

		window.onload = function() {
			var ctx = document.getElementById('canvas').getContext('2d');
			window.myLine = new Chart(ctx, config);
		};

		

	</script>
</body>

</html>
