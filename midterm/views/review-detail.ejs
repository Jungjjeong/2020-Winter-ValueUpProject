
<!doctype html>
<html>
<head>
    <style>
        canvas{
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }
    </style>
	<style type="text/css">
		body,html{
            margin: 0;
            padding:0;
            height:100%;
        }
        *{
            padding: 0;
            margin: 0;
            box-sizing: border-box;
            font-family: 'Alata', sans-serif;
        }
        .page-container{
            width: 100vw;
            height: 100vh;
            background: #eff0f2;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .shadow{
            -webkit-box-shadow: 27px 43px 43px -26px rgba(89,89,89,0.39);
            -moz-box-shadow: 27px 43px 43px -26px rgba(89,89,89,0.39);
            box-shadow: 27px 43px 43px -26px rgba(89,89,89,0.39);
        }
		.login-form-container{
			background:#f5f5f5 ;
			width:1550px;
			height: 800px;
			display: flex;
			flex-direction: column;
			box-shadow: 10px black;
			border-radius: 10px;
		}
		.login-btn-wrap .login-btn{
            width:120px;
            height:35px;
            color:white;
            margin-top: 30px;
            border: 0;
            border-radius: 4px;
            font-weight: bold;
            background:#9ED0FE;
            background: linear-gradient(162deg, #9ED0FE 0%, #87c5ff 50%, #4faaff 100%);
        }
	</style>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>부정행위 점수 확인</title>
	<script src="/Chart.min.js"></script>
	<script src="/graph-utils.js"></script>
</head>

<body>
	<div class="page-container">
		<div class="login-form-container shadow">
			<canvas id="canvas"></canvas>
			<div class="login-btn-wrap">
				<span><button id="toReview" class="login-btn">뒤로가기</button></span>
			</div>
		</div>		
	</div>
	<br>
	<br>
    
	<script>
		var toReview = document.getElementById("toReview");
		var userInfo= "<%=JSON.stringify(userInfo)%>";

        userInfo = userInfo.replace(/&#34;/gi, '\"');
        userInfo = JSON.parse(userInfo);
        
        var data = {"userInfo" : userInfo};
        
		if(toReview){
            toReview.onclick = () =>{

                var form = document.createElement('form');

                objs1 = document.createElement('input');
                objs1.setAttribute('type', 'hidden');
                objs1.setAttribute('name', 'name');
                objs1.setAttribute('value', userInfo.name);       
                form.appendChild(objs1);

                objs2 = document.createElement('input');
                objs2.setAttribute('type', 'hidden');
                objs2.setAttribute('name', 'job');
                objs2.setAttribute('value', userInfo.job);
                form.appendChild(objs2);

                form.setAttribute('method', 'post');
                form.setAttribute('action', "/main/review");
                document.body.appendChild(form);

                form.submit();
            }
        }
		var lectureName="<%=lectureName%>";
		console.log(lectureName);
		var title = "강의 " + lectureName + " , 부정행위 점수 다시보기"
		var data = "<%=JSON.stringify(data)%>";
		data = data.replace(/&#34;/gi, '\"');
		data = JSON.parse(data);
		console.log(data);

		var labels = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20'];
		var colorList = ['red','orange','yellow','green','blue','purple','grey'];

		var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

		var randomScalingFactor = function() {
			return Math.round(Math.random() * 100);
		};

		var configData = {}
		var datasetList = [];
		var index = 0;
		var colorNames = Object.keys(window.chartColors);

		for(var key in data){
			let scoreData = [];
			let tic = parseInt(data[key].length / 20);
			console.log(tic);
			
			for(let i=0;i<20;i++){
				scoreData.push(data[key].scoreList[i*tic]);
			}

			var colorName = colorNames[datasetList.length % colorNames.length];
			var newColor = window.chartColors[colorName];

			datasetList.push({
					label : key,
					backgroundColor : newColor,
					borderColor: newColor,
					data: scoreData,
					fill : false,
			})
		}

		var config = {
			type: 'line',
			data: {
				labels: labels,
				datasets: datasetList,
			},
			options: {
				responsive: true,
				title: {
					display: true,
					text: title
				},
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
				scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'TIME'
						}
					}],
					yAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'SCORE'
						},
						ticks: {
							min: 0,
							max: 100,

							// forces step size to be 5 units
							stepSize: 5
						}
					}]
				}
			}
		};

		

		window.onload = function() {
			var ctx = document.getElementById('canvas').getContext('2d');
			window.myLine = new Chart(ctx, config);
		};

		

	</script>
</body>

</html>
